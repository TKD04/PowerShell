<#
.SYNOPSIS
Adds some needed packages to a Vite

.PARAMETER UseReact
Whether to support React.

.PARAMETER UseDaisyUi
Whether to support daisyUI

.PARAMETER DeployToGitHubPages
Whether to use GitHub Pages to publish a site
#>
function Add-MyPackagesToVite {
    [OutputType([void])]
    param (
        [switch]$UseDaisyUi,
        [switch]$UseReact,
        [switch]$DeployToGitHubPages
    )

    <# Git #>
    # Install npm packages according to package.json generated by Vite
    pnpm i
    Initialize-MyGit
    git add .
    git commit -m 'Add all the files generated by Vite'

    <# TypeScript #>
    Install-MyTypeScript -NoEmit -UseViteReact:$UseReact

    <# ESLint #>
    # Use old version ESLint (v8) instead of new one (v9) which installed by Vite
    # because many packages which I use didn't support new one so far (2024-09-30)
    pnpm rm @esilnt/js eslint globals typescript-eslint eslint-plugin-react-hooks
    git rm '.\eslint.config.js'
    # Make eslintrc more strict
    Install-MyESLint -UseReact:$UseReact
    [hashtable]$eslintrc = Import-MyJSON -LiteralPath '.\.eslintrc.json' -AsHashTable
    # Add Vite default settings
    $eslintrc.env.Remove('es2021')
    $eslintrc.env.Add('es2020', $true)
    $eslintrc.plugins += 'react-refresh'
    $eslintrc.rules.Add('react-refresh/only-export-components', @(
            'warn', @{
                allowConstantExport = $true
            }
        ))
    # Vite uses absolute path ('/') to access public directory
    $eslintrc.rules.Add('import/no-absolute-path', 'off')
    Export-MyJSON -LiteralPath '.\.eslintrc.json' -CustomObject $eslintrc
    git add '.\.eslintrc.json'
    git commit -m 'Make eslintrc more strict'

    <# Jest #>
    Install-MyJest -UseReact:$UseReact

    <# Prettier #>
    Install-MyPrettier -UseTailwindcss

    <# Tailwind CSS #>
    Install-MyTailwindCss -IsVite -UseDaisyUi:$UseDaisyUi

    <# VSCode config #>
    Install-MyVSCodeSettingsForWeb

    <# Rename .js .cjs for config files to work in type: module #>
    Rename-MyFileExtension -OldExtension 'js' -NewExtension 'cjs' -UseGitMv
    git commit -m 'Rename .js .cjs for config files to work in `type: module`'

    <# Add `--open` to `dev` and `preview` npm scirpts #>
    [hashtable]$package = Import-MyJSON -LiteralPath '.\package.json' -AsHashTable
    $package.scripts.Remove('dev')
    $package.scripts.Remove('preview')
    $package.scripts.Add('dev', 'vite --open')
    $package.scripts.Add('preview', 'vite preview --open')
    Export-MyJSON -LiteralPath '.\package.json' -CustomObject $package
    git add '.\package.json'
    git commit -m 'Add `--open` to `dev` and `preview` npm scirpt'

    <# Add vite.yml to deploy to GitHub Pages #>
    if ($DeployToGitHubPages) {
        if (Test-MyStrictPath('.\.github\workflows\vite.yml')) {
            throw 'vite.yml is already in place.'
        }

        New-Item -Path '.\' -Name '.github' -ItemType 'directory'
        New-Item -Path '.\.github' -Name 'workflows' -ItemType 'directory'
        Join-Path -Path $PSScriptRoot -ChildPath 'common\vite.yml' |
        Copy-Item -Destination '.\.github\workflows'
    }

    <# Format all files by Prettier #>
    pnpm run format
    git add .
    git commit -m 'Format all the files by Prettier'
}
