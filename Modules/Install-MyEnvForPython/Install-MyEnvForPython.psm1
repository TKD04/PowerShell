Import-Module -Name 'New-UserVariables'

<#
.SYNOPSIS
Adds the Python develop environment to the current directory.
#>
function Install-MyEnvForPython {
    [Alias('ienvpy')]
    [OutputType([void])]
    param ()

    if (!(Test-MyCommandExists -Command 'poetry')) {
        throw 'Poetry was not found.'
    }

    Initialize-MyGit
    Install-MyVSCodeSettingsForPython
    # cf. https://stackoverflow.com/questions/67802992/initialize-a-python-poetry-project-without-human-interaction
    poetry init --no-interaction
    poetry add flake8 black isort mypy
    # Create the files which automatically generated by "poetry new"
    [string]$currentDirName = (Get-Item -LiteralPath '.\').Name
    New-Item -Path '.\' -Name $currentDirName -ItemType 'Directory'
    New-Item -Path '.\' -Name 'tests' -ItemType 'Directory'
    Get-ChildItem -LiteralPath '.\' -Directory -Exclude @('.venv', '.vscode') | ForEach-Object {
        New-Item -Path $_ -Name '__init__.py' -ItemType 'File'
    }
    New-Item -Path '.\' -Name 'README.md' -ItemType 'File'
    Join-Path -Path $gitignoreDirPath -ChildPath 'Python.gitignore' |
    Copy-Item -Destination '.\.gitignore'
    git add '.\.gitignore' '.\poetry.lock' '.\pyproject.toml' '.\README.md' '.\tests' ".\$currentDirName"
    git commit -m 'Add environment for Python'
    Write-MySuccess -Message 'Set up development environments for Python.'
}
